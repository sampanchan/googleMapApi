{"version":3,"sources":["maps.js"],"names":["GoogleMapApi","evt","preventDefault","console","log","placeName","document","querySelector","value","placeRequest","location","map","getCenter","radius","query","fields","service","google","maps","places","PlacesService","textSearch","handlePlaceResults","results","status","PlacesServiceStatus","OK","clearMarkers","listContainer","createElement","setAttribute","classResults","innerHTML","appendChild","i","length","business","lat","geometry","lng","position","name","address","formatted_address","number","formatted_phone_number","icon","image","photos","getUrl","rating","url","html_attributions","businessItemEl","nameEl","textContent","addressEl","imageEl","ratingEl","createMarker","title","windowContent","form","addEventListener","handlePlaceSearch","options","marker","Marker","infoWindowContent","infoWindow","InfoWindow","addListener","setContent","open","push","forEach","setMap","theCircus","mapOptions","center","zoom","Map","getElementById","window","gMap","init"],"mappings":"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","sourcesContent":["class GoogleMapApi{\n\n    // same as localhost:8888\n    // API_BASE_URL = 'twitter-proxy.php'\n    API_KEY = 'AIzaSyBN8YgsGRhmpj0vSQlLl5EViZa3MGbrjr8'\n    marker = []\n\n    init(){\n        console.log('google map init')\n        const form = document.querySelector('form[name=\"place_search\"]')\n        form.addEventListener('submit', this.handlePlaceSearch)\n    }\n\n    handlePlaceSearch = (evt) => {\n        evt.preventDefault()\n        console.log('handle place search ok')\n        var placeName = document.querySelector('#place').value\n\n        var placeRequest = {\n            location: this.map.getCenter(),\n            radius: 50,\n            query: placeName,\n            fields: ['formatted_phone_number'],\n        }\n        this.service = new google.maps.places.PlacesService(this.map)\n        this.service.textSearch(placeRequest, this.handlePlaceResults)\n    }\n\n    handlePlaceResults = (results, status) => {\n        console.log('handle result search ok')\n      \n\n        if (status == google.maps.places.PlacesServiceStatus.OK){\n            console.log('got results', results)\n\n            this.clearMarkers()\n\n            // results.forEach((result) => {\n            //     this.createMarker({\n            //         lat: result.geometry.location.lat(),\n            //         lng: result.geometry.location.lng(),\n            //         title: result.name,\n            //         windowContent.\n\n            //     })\n\n\n            // })\n\n            //list container\n            const listContainer = document.createElement('div');\n            listContainer.setAttribute('class', 'business-container');\n            const classResults = document.querySelector('.classResults')\n            classResults.innerHTML = ''\n            classResults.appendChild(listContainer);\n            console.log('listcontainercreated')\n\n            \n            \n            for ( let i = 0; i < results.length; i++){\n\n                const business = results[i];\n    \n                const lat  = business.geometry.location.lat();\n                const lng  = business.geometry.location.lng();\n                const position = { lat: lat, lng: lng};\n                const name = business.name;\n                const address = business.formatted_address;\n                // const hours = business.opening_hours.isOpen(name); // hours?\n                // phone#\n                // const number = business.getPhoneNumber();\n                const number = business.formatted_phone_number;\n                const icon = business.icon;\n                const image = business.photos[0].getUrl();\n                const rating = business.rating;\n                const url = business.photos[0].html_attributions;\n\n                // list item\n                const businessItemEl = document.createElement('div');\n                businessItemEl.setAttribute('class', 'business-item');\n                listContainer.appendChild(businessItemEl);\n                console.log('businessitemcreated')\n\n                // Name\n\n                const nameEl = document.createElement('h2');\n                // businessItemEl.setAttribute('class', 'name-item');\n                businessItemEl.appendChild(nameEl);\n                nameEl.textContent = name;\n\n                // address\n\n                const addressEl = document.createElement('p');\n                // listContainer.setAttribute('class', 'address-p');\n                listContainer.appendChild(addressEl);\n                addressEl.textContent = address;\n\n                //image works\n\n                const imageEl = document.createElement('img');\n                businessItemEl.appendChild(imageEl);\n                imageEl.setAttribute('src', image)\n\n                //rating\n\n                const ratingEl = document.createElement('p');\n                businessItemEl.appendChild(ratingEl);\n                ratingEl.textContent = rating + \"/5\"\n\n\n                \n                this.createMarker({\n                    lat: business.geometry.location.lat(),\n                    lng: business.geometry.location.lng(),\n                    map: this.map,\n                    title: 'the circus',\n                    windowContent: `<div><img src=${business.icon} atl=\"\" width=\"20px\" height=\"20px\"></div>\n                    <div>\n                    <h3>${business.name}</h3>\n                    <p>${business.formatted_address}</p>\n                    \n                    <img src=${business.photos[0].getUrl()} atl=\" width=\"50px\" height=\"50px\">\n                    <p> rating: ${business.rating}/5</p>\n                    </div> `\n                })\n\n                // const marker = new google.maps.Marker({\n\n                //     position: position,\n                //     map: this.map,\n                //     title: 'the circus',\n                   \n                //     // label: 'the creative circus',\n                //     // draggable: true,\n                // });\n\n            \n                // const infoWindowContent = `<div><img src=${business.icon} atl=\"\" width=\"20px\" height=\"20px\"></div>\n                //                             <div>\n                //                             <h3>${business.name}</h3>\n                //                             <p>${business.formatted_address}</p>\n                                            \n                                            \n                //                             <img src=${business.photos[0].getUrl()} atl=\" width=\"50px\" height=\"50px\">\n                //                             <p> rating: ${business.rating}/5</p>\n                //                             </div> `\n                // const infoWindow = new google.maps.InfoWindow({\n                //  content: infoWindowContent,\n                // })\n                // marker.addListener('click', () => {\n                //     infoWindow.open(this.map, marker)\n                //    })\n                   \n\n            }\n        }\n    }\n\n    createMarker (options) {\n        \n        const marker = new google.maps.Marker({\n            position: {lat: options.lat, lng: options.lng},\n            map: this.map,\n            title: options.title,\n            icon: options.icon, \n            // windowContent: `<div><img src=${business.icon} atl=\"\" width=\"20px\" height=\"20px\"></div>\n            //     <div>\n            //     <h3>${business.name}</h3>\n            //     <p>${business.formatted_address}</p>\n            //    <p>${business.formatted_phone_number}</p>\n            //    <p>${business.opening_hours.isOpen(name)}</p>\n            //    <img src=${business.photos[0].getUrl()} atl=\" width=\"50px\" height=\"50px\">\n            //     <p> rating: ${business.rating}/5</p>\n            //     </div> `\n            // label: 'the creative circus',\n            // draggable: true,\n        })\n\n\n        const infoWindowContent = options.windowContent\n        if (!this.infoWindow){\n            this.infoWindow = new google.maps.InfoWindow()\n        }\n                    // const infoWindow = new google.maps.InfoWindow({\n                    //  content: infoWindowContent,\n                    // })\n                    marker.addListener('click', () => {\n                        // infoWindow.open(this.map, marker)\n                        this.infoWindow.setContent(infoWindowContent)\n                        this.infoWindow.open(this.map, marker)\n                     })\n\n                     this.marker.push(marker)\n                    \n    } \n\n    clearMarkers(){\n        this.marker.forEach(marker => {\n            marker.setMap(null)\n        })\n\n        this.marker = []\n    }\n    \n\n    ready(){\n\n        console.log('map is ready')\n\n        const theCircus = { lat: 33.81328, lng: -84.36175 } \n        const mapOptions = {\n            center: theCircus,\n            zoom:15,\n        }\n\n        this.map = new google.maps.Map(document.getElementById('map'), mapOptions)\n\n        const image = \"/dist/img/tent.png\"\n        this.createMarker({\n            lat: theCircus.lat,\n            lng: theCircus.lng,\n            title: ' The circus',\n            icon: image,\n            windowContent:`<div><h2>Join the Circus!!</h2><p> A place where you leave your worries behind and make new stress factors</p></div>`\n        })\n        \n        \n        // const image = \"/dist/img/tent.png\"\n        // const marker = new google.maps.Marker({\n        //     position: theCircus,\n        //     map: this.map,\n        //     title: 'the circus',\n        //     icon: image,\n        //     // label: 'the creative circus',\n        //     // draggable: true,\n        // })\n\n        //`<div><h2>Join the Circus!!</h2><p> A place where you leave your worries behind and make new stress factors</p></div>`,\n\n\n        // const infoWindowContent = `<div><h2>Join the Circus!!</h2><p> A place where you leave your worries behind and make new stress factors</p></div>`\n        //             const infoWindow = new google.maps.InfoWindow({\n        //              content: infoWindowContent,\n        //             })\n        //             marker.addListener('click', () => {\n        //                 infoWindow.open(this.map, marker)\n        //                })\n\n\n        \n\n                    \n                    \n            \n        }\n        \n    }       \n    \n        \n\n       \n\n        \n    \n    \n\nwindow.gMap = new GoogleMapApi();\nwindow.gMap.init();\n\n"],"file":"maps.js"}